{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.js","components/App.js","index.js"],"names":["PREFIX","useLocalStorage","key","initialValue","prefixKey","_useState","useState","jsonValue","localStorage","getItem","console","log","JSON","parse","_useState2","Object","slicedToArray","value","setValue","useEffect","setItem","stringify","Editor","props","open","setOpen","language","displayName","onChange","react_default","a","createElement","className","concat","type","onClick","index_es","icon","faCompressAlt","faExpandAlt","react_codemirror2","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","js","setJs","srcDoc","setSrcDoc","timeOut","setTimeout","clearTimeout","Fragment","title","sandbox","width","height","frameBorder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cd61051.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\nconst PREFIX='codepen-clone-'\r\nexport default function useLocalStorage(key,initialValue) {\r\n    const prefixKey=PREFIX +key;\r\n    const[value,setValue]=useState(()=>\r\n    {\r\n        const jsonValue=localStorage.getItem(prefixKey);\r\n        console.log(jsonValue)\r\n        if(jsonValue!=null)return JSON.parse(jsonValue);\r\n       \r\n        \r\n    })\r\n    useEffect(()=>\r\n    {\r\n        localStorage.setItem(prefixKey,JSON.stringify(value))\r\n        \r\n    },[prefixKey,value])\r\n    return [value,setValue];\r\n\r\n}\r\n","import React,{useState} from 'react'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport'codemirror/mode/javascript/javascript';\r\nimport'codemirror/mode/css/css';\r\n\r\nimport {FontAwesomeIcon}from '@fortawesome/react-fontawesome';\r\nimport {faCompressAlt,faExpandAlt}from '@fortawesome/free-solid-svg-icons';\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\r\nexport default function Editor(props) {\r\n    const[open,setOpen]=useState(true);\r\n    const{language,displayName,value,onChange}=props;\r\n      const handleChange=(editor,data,value)=>\r\n     {\r\n     onChange(value);\r\n     }\r\n    return (\r\n        <div className={`editor-container ${open ? '' :'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button \r\n                type=\"button\"\r\n                className=\"expand-collapse-button\"\r\n                onClick={()=>setOpen(!open)}>\r\n                    \r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt}/>\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n            onBeforeChange={handleChange}\r\n            value={value}\r\n            className=\"code-mirror-wrapper\"\r\n            options={{\r\n                lineWrapping:true,\r\n                lint:true,\r\n                mode:language,\r\n                theme:\"material\",\r\n                lineNumbers:true\r\n            }}\r\n            />\r\n                    </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport Editor from './Editor'\r\n\r\nexport default function App() {\r\n const[html,setHtml]=useLocalStorage('html','');\r\n const[css,setCss]=useLocalStorage('css','');\r\n const[js,setJs]=useLocalStorage('js',);\r\nconst [srcDoc, setSrcDoc] = useState(\"\")\r\n useEffect(()=>\r\n {\r\n     const timeOut=setTimeout(()=>\r\n     {\r\n\r\n      setSrcDoc(\r\n        `\r\n        <html>\r\n        <body>${html} </body>\r\n        <style>${css}</style>\r\n        <script>${js}</script>\r\n        </html>\r\n        `\r\n       \r\n      )\r\n     },250)\r\nreturn ()=>{  clearTimeout(timeOut)  \r\nconsole.log(\"Cancel\");\r\n};\r\n },[html,css,js])\r\n \r\n    return(\r\n        <>\r\n        <div className=\"pane top-pane\"> \r\n        <Editor language=\"xml\" \r\n        displayName=\"HTML\"\r\n        value={html}\r\n        onChange={setHtml}\r\n        />\r\n        <Editor language=\"css\" \r\n        displayName=\"CSS\"\r\n        value={css}\r\n        onChange={setCss}\r\n        />\r\n        <Editor language=\"js\" \r\n        displayName=\"JS\"\r\n        value={js}\r\n        onChange={setJs}\r\n        />  \r\n        </div>\r\n        <div className=\"pane\">\r\n            <iframe \r\n            \r\n            srcDoc={srcDoc}\r\n            title=\"output\"\r\n            sandbox=\"allow-scripts\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            frameBorder=\"0\"\r\n            />\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}